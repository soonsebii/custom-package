--- a/tools/irexec.c
+++ b/tools/irexec.c
@@ -21,10 +21,15 @@
 #include <stdlib.h>
 #include <string.h>
 #include <getopt.h>
+#include <fcntl.h>
 
 #include "lirc_client.h"
 #include "lirc_log.h"
 
+#define LED_ROOT	"/sys/class/leds/%s/"
+#define LED_TRIGGER	LED_ROOT "trigger"
+#define LED_SHOT	LED_ROOT "shot"
+
 static char *prog;
 
 int main(int argc, char *argv[])
@@ -32,7 +37,9 @@
 	struct lirc_config *config;
 	int daemonize = 0;
 	char *program = "irexec";
-        int r;
+	char *led_name = NULL;
+	char path[255] = {};
+	int r, fd;
 
 	prog = "irexec " VERSION;
 	while (1) {
@@ -42,9 +49,10 @@
 			{"version", no_argument, NULL, 'v'},
 			{"daemon", no_argument, NULL, 'd'},
 			{"name", required_argument, NULL, 'n'},
+			{"led", required_argument, NULL, 'l'},
 			{0, 0, 0, 0}
 		};
-		c = getopt_long(argc, argv, "hvdn:", long_options, NULL);
+		c = getopt_long(argc, argv, "hvdnl:", long_options, NULL);
 		if (c == -1)
 			break;
 		switch (c) {
@@ -54,6 +62,7 @@
 			printf("\t -v --version\t\tdisplay version\n");
 			printf("\t -d --daemon\t\trun in background\n");
 			printf("\t -n --name\t\tuse this program name\n");
+			printf("\t -l --led [led name]\tled blinking using sysfs one-shot LED Trigger \n");
 			return (EXIT_SUCCESS);
 		case 'v':
 			printf("%s\n", prog);
@@ -64,6 +73,9 @@
 		case 'n':
 			program = optarg;
 			break;
+		case 'l':
+			led_name = optarg;
+			break;
 		default:
 			printf("Usage: %s [options] [config_file]\n", argv[0]);
 			return (EXIT_FAILURE);
@@ -82,6 +94,27 @@
 		char *c;
 		int ret;
 
+		if (led_name) {
+			sprintf(path, LED_ROOT, led_name);
+			if (0 != access(path, F_OK)) {
+				if (ENOENT == errno) {
+					fprintf(stderr, "%s isn't in /sys/class/leds/\n", led_name);
+					exit(EXIT_FAILURE);
+				}
+			}
+
+			sprintf(path, LED_TRIGGER, led_name);
+			fd = open(path, O_WRONLY);
+			if (write(fd, "oneshot", 7) < 0){
+				fprintf(stderr, "One-shot LED Trigger isn't installed/accessible\n");
+				close(fd);
+				exit(EXIT_FAILURE);
+			}
+			close(fd);
+
+			sprintf(path, LED_SHOT, led_name);
+		}
+
 		if (daemonize) {
 			if (daemon(0, 0) == -1) {
 				fprintf(stderr, "%s: can't daemonize\n", prog);
@@ -91,6 +124,7 @@
 				exit(EXIT_FAILURE);
 			}
 		}
+
 		while (lirc_nextcode(&code) == 0) {
 			if (code == NULL)
 				continue;
@@ -99,6 +133,13 @@
 					logprintf(LIRC_DEBUG,
 						  "Execing command \"%s\"\n", c);
 				}
+
+				if (led_name) {
+					fd = open(path, O_WRONLY);
+					write(fd, "1", 1);
+					close(fd);
+				}
+
 				r = system(c);
 				if (r != 0) {
 					logprintf(LIRC_NOTICE, 
